%A AND D EFFICIENCIES OF A MODEL AGAINST RANDOM DESIGNS 
% to see a test of A vs D optimality, try:
% Vi = eye(mspec.numframes);
% for i = 1:1000, 
%    [X,paramvec] = construct_model(mspec,conditions,[]); 
%    a(i) = calcefficiency(ones(1,size(X,2) - 1),[],pinv(X),Vi,0);
%    d(i) = 1 ./ (inv(det(X'*X)) .^ (1./size(X,2)));
% end
% d = d - mean(d);
% figure; plot(a,d,'x'); xlabel('A-efficiency'),ylabel('D-efficiency')
% a1 = calcefficiency(ones(1,size(X,2) - 1),[],pinv(X),Vi,0);
% d1 = 1 ./ (inv(det(X'*X)) .^ (1./size(X,2)));
% hold on;plot(a1,d1,'rs','MarkerFaceColor','r')

% -------------------------------------------------------------------------------------------------
		% * efficiency
		% -------------------------------------------------------------------------------------------------
	
    	if (cbalColinPowerWeights(2) > 0) & go   % build predictor set of vectors and convolve with HRF

			model = designvector2model(stimList,ISI,HRF,TR,numsamps,nonlinthreshold,S);
            
            % add Block effect for mixed block/ER
            % Kludgy insertion. tor: 5/6/08
            if GA.trans2block && isfield(GA, 'blockcontrast') && GA.blockcontrast
                testcontrasts = blkdiag(1, contrasts);
                testmodel = [blkmodel model];

                xtxitx = pinv(testmodel);   % a-optimality   % inv(X'S'SX)*(SX)'; pseudoinv of (S*X)
                fitnessMatrix(2,z) = calcEfficiency([1 contrastweights],testcontrasts, xtxitx, svi, dflag);
            else
                % Original code, used in most cases
                if dflag
                    xtxitx = model'*svi*model;  % d-optimality
                    fitnessMatrix(2,z) = calcEfficiency(contrastweights,contrasts,xtxitx,[],dflag);
                else
                    xtxitx = pinv(model);   % a-optimality   % inv(X'S'SX)*(SX)'; pseudoinv of (S*X)
                    fitnessMatrix(2,z) = calcEfficiency(contrastweights,contrasts,xtxitx,svi,dflag);
                end

            end

		elseif 	docriterion & ~go    %(cbalColinPowerWeights(2) > 0 | cbalColinPowerWeights(3) > 0) & ~go  
			fitnessMatrix(2,z) = -1000;
		else
			fitnessMatrix(2,z) = 0;
		end
	
        % -------------------------------------------------------------------------------------------------
		% * HRF shape estimation efficiency
		% -------------------------------------------------------------------------------------------------
	
    	if (cbalColinPowerWeights(3) > 0) & go   % build predictor set of vectors and convolve with HRF

            delta = [];
            for i = 1:max(stimList(:,1))
                delta(:,i) = (stimList == i);
            end
            
            % how much HRF estimation we do (up to 30 s) matters
            % we want at least as long as the expected actual response
			[model] = tor_make_deconv_mtx2(delta,round(30 / TR),TR / ISI);  % hard-coded for 30 s of HRF estimation
            
            % add Block effect for mixed block/ER
            % Kludgy insertion. tor: 5/6/08
            if GA.trans2block && isfield(GA, 'blockcontrast') && GA.blockcontrast
                model = [blkmodel model];
            end
            
            if ~isempty(S), model = S * model; end
            
            if dflag
                xtxitx = model'*svi*model;  % d-optimality
                fitnessMatrix(3,z) = calcEfficiency([],[],xtxitx,[],dflag);
            else
        	    xtxitx = pinv(model);   % a-optimality   % inv(X'S'SX)*(SX)'; pseudoinv of (S*X)
                fitnessMatrix(3,z) = calcEfficiency([],[],xtxitx,svi,dflag);
            end
		   
		elseif 	docriterion && ~go    %(cbalColinPowerWeights(2) > 0 | cbalColinPowerWeights(3) > 0) & ~go  
			fitnessMatrix(3,z) = -1000;
		else
			fitnessMatrix(3,z) = 0;
		end
        
   	end

   	clear model,clear maxNumStim,clear maxDev,clear maxFreqDev,clear cBal,clear dummy,clear stimList,clear go,clear xtxitx
   